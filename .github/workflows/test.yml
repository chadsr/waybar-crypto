name: Tests

on:
    push:
        branches:
            - "master"
    pull_request:

jobs:
    lint:
        runs-on: "ubuntu-latest"
        steps:
            - uses: actions/checkout@v4
            - name: Install Python 3
              uses: actions/setup-python@v5
            - name: Lint
              uses: psf/black@stable

    test:
        needs: lint
        strategy:
            fail-fast: true
            matrix:
                python-version: ["3.8", "3.9", "3.10", "3.11"]
        runs-on: "ubuntu-latest"
        steps:
            - uses: actions/checkout@v4
            - name: Install Python 3
              uses: actions/setup-python@v5
              with:
                  python-version: ${{ matrix.python-version }}
            - name: Install Poetry
              uses: snok/install-poetry@v1
              with:
                  virtualenvs-create: true
                  virtualenvs-in-project: true
            - name: Load cached venv
              id: cached-poetry-dependencies
              uses: actions/cache@v4
              with:
                  path: .venv
                  key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
            - name: Install dependencies
              if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
              run: poetry install --no-interaction --no-root
            - name: Run Pytest
              env:
                  COINMARKETCAP_API_KEY: ${{ secrets.COINMARKETCAP_API_KEY }}
              run: |
                  source .venv/bin/activate
                  pytest --cov=./ --cov-report=xml tests/
            - name: Run Bandit
              run: |
                  source .venv/bin/activate
                  bandit ./waybar_crypto.py
