name: Tests

on:
  push:
    branches:
    - "master"
    - "main"
  pull_request:

jobs:
  lint:
    runs-on: 'ubuntu-latest'
    steps:
    - uses: actions/checkout@v3
    - name: Install Python 3
      uses: actions/setup-python@v3
    - name: Lint
      uses: ricardochaves/python-lint@v1.4.0
      with:
        use-pylint: false
        use-pycodestyle: false
        use-flake8: false
        use-black: true
        use-mypy: false
        use-isort: false

  test:
    needs: lint
    strategy:
      fail-fast: true
      matrix:
        python-version: [ "3.7", "3.8", "3.9", "3.10" ]
    runs-on: 'ubuntu-latest'
    steps:
      - uses: actions/checkout@v3
      - name: Install Python 3
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      - name: Run Pytest
        env:
          COINMARKETCAP_API_KEY: ${{ secrets.COINMARKETCAP_API_KEY }}
        run: |
          source .venv/bin/activate
          pytest --cov=./ --cov-report=xml tests/
      - name: Run Bandit
        run: |
          source .venv/bin/activate
          bandit ./waybar_crypto.py