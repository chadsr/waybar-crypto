name: Tests
on:
  push:
    branches:
      - "master"
    paths:
      - ".github/workflows/test.yml"
      - "**/*.py"
      - "poetry.lock"
      - "pyproject.toml"
      - "config.ini.example"
  pull_request:
    paths:
      - ".github/workflows/test.yml"
      - "**/*.py"
      - "poetry.lock"
      - "pyproject.toml"
      - "config.ini.example"
jobs:
  lint:
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v4
      - name: Install Python 3
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - uses: pre-commit/action@v3.0.1
        env:
          RUFF_OUTPUT_FORMAT: github
  test:
    needs: lint
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v4
      - name: Install Python 3
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      - name: Run Pytest
        env:
          TEST_CMC_API_KEY: ${{ secrets.TEST_CMC_API_KEY }}
        run: |
          source .venv/bin/activate
          pytest -vv --cov=./ --cov-report=xml tests/
      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Run Bandit
        run: |
          source .venv/bin/activate
          bandit ./waybar_crypto.py
